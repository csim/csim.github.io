<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SharePoint on Clint Simon</title><link>https://csim.github.io/tags/sharepoint/</link><description>Recent content in SharePoint on Clint Simon</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 25 Nov 2013 08:00:00 -0800</lastBuildDate><atom:link href="https://csim.github.io/tags/sharepoint/index.xml" rel="self" type="application/rss+xml"/><item><title>Embed video in SharePoint</title><link>https://csim.github.io/posts/2013/2013-11-25-embed-video-sharepoint/</link><pubDate>Mon, 25 Nov 2013 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2013/2013-11-25-embed-video-sharepoint/</guid><description>I recently had to embed a full-screen video into a SharePoint 2010 page (don&amp;rsquo;t ask). Here is the solution using the default silverlight embeded video player which is packaged with SharePoint 2010.</description></item><item><title>Using the SharePoint content database as a cache</title><link>https://csim.github.io/posts/2008/2008-09-12-using-the-sharepoint-content-database-as-a-cache/</link><pubDate>Fri, 12 Sep 2008 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2008/2008-09-12-using-the-sharepoint-content-database-as-a-cache/</guid><description>Data caching is a core concept in the web dominated world that we live in. The premise is that we should not have to go back to retrieve data from a data store for every single web request when the data is unchanged, thereby sharing data across web requests. This offers huge performance advantages because all latency related to data fetching, query processing and transmission is eliminated for requests that use the same data.</description></item><item><title>Customize the web.config with a SharePoint XML customization</title><link>https://csim.github.io/posts/2008/2008-08-16-customize-the-web.config-with-a-sharepoint-customization/</link><pubDate>Sat, 16 Aug 2008 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2008/2008-08-16-customize-the-web.config-with-a-sharepoint-customization/</guid><description>It is possible to manipulate the web.config file globally by using a little known feature in SharePoint that allows developers to describe a set of changes by using an XML customization file. In fact, both SharePoint and MOSS use this mechanism to publish web.config changes when a web application is created.
Create the customization file The customization file is used by SharePoint to apply changes to the web.config file when a web application is created.</description></item><item><title>Anonymous access and item level permissions</title><link>https://csim.github.io/posts/2008/2008-04-03-anonymous-access-and-item-level-permissions/</link><pubDate>Thu, 03 Apr 2008 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2008/2008-04-03-anonymous-access-and-item-level-permissions/</guid><description>You are probably familiar with the fact that SharePoint now has the capability to host site with anonymous access turned on. I learned the hard way that item level permissions do not participate in the anonymous access behavior the way you might expect. When an item does not inherit permissions, it is not possible to enable anonymous access on that item. Note the document library permission settings menu:
Here&amp;rsquo;s the same menu for an item which is not inheriting permissions from the parent library:</description></item><item><title>Custom Field control implemented as a User Control</title><link>https://csim.github.io/posts/2008/2008-03-13-custom-field-control-implemented-as-a-user-control/</link><pubDate>Thu, 13 Mar 2008 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2008/2008-03-13-custom-field-control-implemented-as-a-user-control/</guid><description>When creating custom controls it is often must easier to create a control using the &amp;ldquo;User Control&amp;rdquo; development model instead of the &amp;ldquo;Server Control&amp;rdquo; model. Server controls generally have a more &amp;ldquo;low level&amp;rdquo; feel and dictate that the developer build the control&amp;rsquo;s rendering from scratch. Either by building a control tree or by constructing the rendered output in code.
Alternatively user controls have nice separation of code and presentation by virtue of having a markup file (.</description></item><item><title>SharePoint Custom Application Development Methodologies</title><link>https://csim.github.io/posts/2008/2008-01-07-sharepoint-custom-application-development-methodologies/</link><pubDate>Mon, 07 Jan 2008 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2008/2008-01-07-sharepoint-custom-application-development-methodologies/</guid><description>As SharePoint becomes more prevalent in the custom application development realm, there has been some friction and malcontent expressed in relation to deployment processes, team development methods and application upgrade paths. I believe that Microsoft has fallen short on providing the tools necessary to promote and support custom application development on the SharePoint platform.
In my opinion, the SharePoint platform should not limit nor impede my ability as a custom application developer to deliver solutions that follow the same deployment principals as any other custom asp.</description></item></channel></rss>