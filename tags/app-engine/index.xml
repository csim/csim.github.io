<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App Engine on Clint Simon</title><link>https://csim.github.io/tags/app-engine/</link><description>Recent content in App Engine on Clint Simon</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 28 Oct 2011 08:00:00 -0800</lastBuildDate><atom:link href="https://csim.github.io/tags/app-engine/index.xml" rel="self" type="application/rss+xml"/><item><title>The case of the 30 day memcache timeout on app engine</title><link>https://csim.github.io/posts/2011/2011-10-28-the-case-of-the-30-day-memcache-timeout-on-app-engine/</link><pubDate>Fri, 28 Oct 2011 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2011/2011-10-28-the-case-of-the-30-day-memcache-timeout-on-app-engine/</guid><description>I ran into an interesting problem with Google app engine. It seems that the memcache time limit is enforced differently on the development server versus the production servers.
The documentation says that the time limit for a memcache key is 30 days. The behavior that I have observed is that if you set a memcache key to timeout at 30 days, the development server (on windows) will happily persist the data as expected.</description></item><item><title>Google's new App Engine pricing</title><link>https://csim.github.io/posts/2011/2011-09-29-googles-new-app-engine-pricing/</link><pubDate>Thu, 29 Sep 2011 08:00:00 -0800</pubDate><guid>https://csim.github.io/posts/2011/2011-09-29-googles-new-app-engine-pricing/</guid><description>Google App engine is in the process of changing it&amp;rsquo;s pricing model. At present this new pricing model goes into effect on December 1, 2011. There has been quite an uproar among App engine developers. In some cases the new billing model raises monthly costs by more than 300%. This has cause quite a reaction among the community and the backlash is very real
What is changing? The primary change is that Google is moving from a model where you are charged by CPU time to a model where you are charged by &amp;ldquo;instance time&amp;rdquo;.</description></item></channel></rss>